### KEY BINDINGS ###

# Remap prefix
unbind C-b
set -g prefix C-a

# Send prefix to nested session
bind C-a send-prefix

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind \}    # swap-pane -D
unbind \{    # swap-pane -U
unbind \[    # paste-buffer
unbind \]
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left

# Reload config
bind C-r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded"

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
        'display "Session has only 1 client attached"'

# Copy mode
bind -n M-Up copy-mode

### BEHAVIOUR ###

# Remove delay between keypresses for recognising commands
set -s escape-time 0

# Increase scrollback buffer
set -g history-limit 50000

# tmux messages are displayed for longer (ms)
set -g display-time 2000

# Refresh 'status-left/right' more often
set -g status-interval 5

# Upgrade $TERM
set -g default-terminal "screen-256color"

# Constrain window size based on window rather than session
setw -g aggressive-resize on

# Stop renaming windows
setw -g allow-rename off
setw -g automatic-rename on

# Mouse support
set -g mouse on

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

### APPEARANCE ###

# Start numbering at 1 for easier keyboard use
set -g base-index 1

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-justify left
set -g status-right-length 100

# Colour definitions
c_fg="colour007"
c_fg_alt="colour008"
c_bg="colour000"
c_bg_alt="colour007"
c_accent="colour001"
c_accent_alt="colour004"
c_ok="colour002"
c_not_ok="colour006"

# outline for active pane
setw -g pane-active-border-style "fg=$c_accent"

# Status bar style
set -g status-style "fg=$c_fg,bg=$c_bg"
setw -g window-status-format "#[fg=$c_fg_alt][#I] #W#[default]"
setw -g window-status-current-style "fg=$c_bg,bg=$c_fg"
setw -g window-status-current-format "[#I] #W "

# Status bar widgets
wg_session="#[bg=$c_accent] #S #[default]"
wg_date="#[fg=$c_fg]%a %d %b %H:%M#[default]"
wg_user_host="#[fg=$c_not_ok]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$c_bg,bg=$c_fg]#{?window_zoomed_flag,[Z],}#[default]"

# Status bar contents
set -g status-left "$wg_session"
set -g status-right "$wg_is_zoomed $wg_user_host | $wg_date "
